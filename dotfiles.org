#+STARTUP: content

* Email

 #+BEGIN_SRC fundamental :noweb-ref email-address
   anthony@example.com
 #+END_SRC

** mbsync

   #+BEGIN_SRC sh :results silent
     mkdir -p ~/Mail/INBOX
   #+END_SRC

   #+BEGIN_SRC conf :tangle ~/.mbsyncrc :noweb yes
     IMAPAccount gmail
     Host imap.gmail.com
     User <<email-address>>
     PassCmd "gpg2 --use-agent --quiet -d ~/.authinfo.gpg | cut -d ' ' -f 6"
     AuthMechs LOGIN
     SSLType IMAPS
     # SSLVersions SSLv3
     CertificateFile /etc/ssl/certs/ca-certificates.crt

     IMAPStore gmail-remote
     Account gmail

     MaildirStore gmail-local
     Path ~/Mail/
     Inbox ~/Mail/INBOX

     Channel gmail-inbox
     Master :gmail-remote:
     Slave :gmail-local:
     Patterns "INBOX"
     Create Both
     Expunge Both
     SyncState *

     Channel gmail-trash
     Master :gmail-remote:"[Gmail]/Trash"
     Slave :gmail-local:"[Gmail].Trash"
     Create Both
     Expunge Both
     SyncState *

     Channel gmail-sent
     Master :gmail-remote:"[Gmail]/Sent Mail"
     Slave :gmail-local:"[Gmail].Sent Mail"
     Create Both
     Expunge Both
     SyncState *

     Channel gmail-all
     Master :gmail-remote:"[Gmail]/All Mail"
     Slave :gmail-local:"[Gmail].All Mail"
     Create Both
     Expunge Both
     SyncState *

     Channel gmail-starred
     Master :gmail-remote:"[Gmail]/Starred"
     Slave :gmail-local:"[Gmail].Starred"
     Create Both
     Expunge Both
     SyncState *

     Group gmail
     Channel gmail-inbox
     Channel gmail-sent
     Channel gmail-trash
     Channel gmail-all
     Channel gmail-starred
   #+END_SRC

** mu4e and emacs smtpmail

   #+BEGIN_SRC emacs-lisp :tangle ~/.emacs.d/email-settings.el :noweb yes
     (setq mu4e-user-mail-address-list '("<<email-address>>"))
     (setq mu4e-reply-to-address "<<email-address>>"
           user-mail-address "<<email-address>>"
           user-full-name  "Anthony DiGirolamo")
     (setq mu4e-compose-signature
           (concat
            "Anthony DiGirolamo\n"
            "<<email-address>>"))

     (setq message-send-mail-function    'smtpmail-send-it
           smtpmail-stream-type          'starttls
           ;; smtpmail-starttls-credentials '(("smtp.gmail.com" 587 nil nil))
           ;; smtpmail-smtp-user            "<<email-address>>"
           smtpmail-default-smtp-server  "smtp.gmail.com"
           smtpmail-smtp-server          "smtp.gmail.com"
           smtpmail-smtp-service         587
           ;; smtpmail-local-domain         ""
           smtpmail-debug-info t
           smtpmail-debug-verb t)

     (setq gnutls-algorithm-priority "NORMAL:%COMPAT")

     (setq
      mu4e-maildir       "~/Mail"
      mu4e-sent-folder   "/[Gmail].Sent Mail"
      mu4e-drafts-folder "/[Gmail].Drafts"
      mu4e-trash-folder  "/[Gmail].Trash"
      mu4e-refile-folder "/[Gmail].All Mail")
     (setq mu4e-maildir-shortcuts
           '( ("/INBOX"            . ?i)
              ("/[Gmail].All Mail" . ?a)
              ("/[Gmail].Sent Mail" . ?s)))

     (setq mu4e-compose-complete-ignore-address-regexp "no-?reply\|via RT")
   #+END_SRC

** smtpmail ~/.authinfo.gpg

   #+BEGIN_SRC conf :tangle no :noweb yes
     machine smtp.gmail.com login <<email-address>> password p455w0rd
   #+END_SRC


* i3

** Links

  [[http://i3wm.org/docs/userguide.html][i3 User's Guide]]
  [[http://i3wm.org/docs/userguide.html#command_chaining][i3 Command Chaining]]

** Main Config

*** PC modifiers

   #+BEGIN_SRC conf :tangle (if (not amd/using-pocketchip) "~/.i3/config" "no") :mkdirp yes
     # i3 config file (v4)
     # Please see http://i3wm.org/docs/userguide.html for a complete reference!
     # alt+super+ctrl
     set $mod Mod1+Mod4+Ctrl
     font -*-terminus-bold-r-normal-*-14-*-*-*-c-*-iso10646-*
     # font pango:Roboto Medium 7
     # font pango:DejaVu Sans Mono 8
     # font pango:PragmataPro 10
     # :antialias=false:hinting=true:autohint=false:hintstyle=hintnone:dpi=96
   #+END_SRC

*** PocketCHIP modifiers

   #+BEGIN_SRC conf :tangle (if amd/using-pocketchip "~/.i3/config" "no") :mkdirp yes
     set $mod Mod4
     font pango:Roboto Medium 7
   #+END_SRC

*** common config

   #+BEGIN_SRC conf :tangle ~/.i3/config :mkdirp yes
     # Use Mouse+$mod to drag floating windows to their wanted position
     floating_modifier $mod

     # toggle tiling / floating
     bindsym $mod+Shift+space floating toggle
     bindsym $mod+button1 move
     bindsym $mod+Shift+button1 resize

     # change focus between tiling / floating windows
     # bindsym $mod+space focus mode_toggle

     # floating windows, use xprop to get class (the second part of WM_CLASS) or use title=
     for_window [class="Blueman-manager"] floating enable
     #, resize set 640 480
     for_window [title="Ediff"] floating enable
     for_window [class="Xfce4-appfinder"] floating enable
     #, resize set 640 480
     for_window [class="pico8"] floating enable

     # need a newer version of i3 for title_format
     # title_format "%class > %title"
     # for_window [class="google-chrome"] title_format "Chrome - <span foreground='red'>%title</span>"

     # screen lock
     # bindsym $mod+k exec i3lock -c 000000
     bindsym $mod+k exec xscreensaver-command -lock

     # start a terminal
     bindsym $mod+Return exec urxvt
     # web browser
     bindsym $mod+w exec google-chrome
     # file manager
     # bindsym $mod+Shift+f exec nemo --no-desktop
     # bindsym $mod+Shift+f exec thunar
     bindsym $mod+Shift+f exec urxvt -e ~/.local/bin/ranger
     bindsym $mod+Shift+p exec pcmanfm
     bindsym $mod+Shift+g exec nautilus --no-desktop
     # themes
     bindsym $mod+Shift+t exec lxappearance

     # kill focused window
     bindsym $mod+q kill

     # Program launchers
     # bindsym $mod+d exec dmenu_run
     bindsym $mod+d exec rofi -show run
     bindsym $mod+a exec xfce4-appfinder --disable-server
     bindsym $mod+space exec rofi -show drun

     # Alt+Tab to rofi window mode
     bindsym Mod1+Tab exec rofi -show window

     # Open clipman
     bindsym $mod+v exec xfce4-popup-clipman

     # There also is the (new) i3-dmenu-desktop which only displays applications
     # shipping a .desktop file. It is a wrapper around dmenu, so you need that
     # installed.
     bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop

     # change focus
     bindsym $mod+h focus left
     bindsym $mod+n focus down
     bindsym $mod+e focus up
     bindsym $mod+l focus right

     # alternatively, you can use the cursor keys:
     bindsym $mod+Left focus left
     bindsym $mod+Down focus down
     bindsym $mod+Up focus up
     bindsym $mod+Right focus right

     # move focused window
     bindsym $mod+Shift+h move left
     bindsym $mod+Shift+n move down
     bindsym $mod+Shift+e move up
     bindsym $mod+Shift+l move right

     # alternatively, you can use the cursor keys:
     bindsym $mod+Shift+Left move left
     bindsym $mod+Shift+Down move down
     bindsym $mod+Shift+Up move up
     bindsym $mod+Shift+Right move right

     # split in horizontal orientation
     bindsym $mod+s split v

     # # split in vertical orientation
     # bindsym $mod+v split h

     # enter fullscreen mode for the focused container
     bindsym $mod+f fullscreen

     # change container layout (stacked, tabbed, toggle split)
     bindsym $mod+t layout toggle split
     bindsym $mod+p layout tabbed
     bindsym $mod+g layout stacking

     # focus the parent container
     bindsym $mod+y focus parent

     # focus the child container
     bindsym $mod+u focus child

     # switch to workspace
     bindsym $mod+1 workspace 1
     bindsym $mod+2 workspace 2
     bindsym $mod+3 workspace 3
     bindsym $mod+4 workspace 4
     bindsym $mod+5 workspace 5
     bindsym $mod+6 workspace 6
     bindsym $mod+7 workspace 7
     bindsym $mod+8 workspace 8
     bindsym $mod+9 workspace 9
     bindsym $mod+0 workspace 10

     bindsym $mod+Tab workspace back_and_forth

     # move focused container to workspace
     bindsym $mod+Shift+1 move container to workspace 1
     bindsym $mod+Shift+2 move container to workspace 2
     bindsym $mod+Shift+3 move container to workspace 3
     bindsym $mod+Shift+4 move container to workspace 4
     bindsym $mod+Shift+5 move container to workspace 5
     bindsym $mod+Shift+6 move container to workspace 6
     bindsym $mod+Shift+7 move container to workspace 7
     bindsym $mod+Shift+8 move container to workspace 8
     bindsym $mod+Shift+9 move container to workspace 9
     bindsym $mod+Shift+0 move container to workspace 10

     bindsym $mod+Shift+Tab move container to workspace back_and_forth

     # reload the configuration file
     bindsym $mod+Shift+c reload
     # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
     bindsym $mod+Shift+r restart
     # exit i3 (logs you out of your X session)
     bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

     set $mode_change CHANGE: [h]orizontal  [v]ertical  [t]abbed  [s]tacked  [f]loat  [b]order  [g]rid  [o]nly
     bindsym $mod+c mode "$mode_change"

     mode "$mode_change" {
         bindsym t layout tabbed; mode "default"
         bindsym s layout stacking; mode "default"
         bindsym h layout splith; mode "default"
         bindsym v layout splitv; mode "default"

         bindsym p mode "$mode_change_parent"

         bindsym f floating toggle; mode "default"
         bindsym b border toggle; mode "default"

         bindsym o focus parent;  layout tabbed; focus child;   layout stacking; mode "default"
         bindsym g layout splitv; focus parent;  layout splith; focus child;     mode "default"

         bindsym Escape mode "default"
         bindsym Return mode "default"
         bindsym q mode "default"
     }

     set $mode_change_parent CHANGE PARENT: [h]orizontal  [v]ertical  [t]abbed  [s]tacked
     mode "$mode_change_parent" {
         bindsym t focus parent; layout tabbed;   focus child; mode "default"
         bindsym s focus parent; layout stacking; focus child; mode "default"
         bindsym h focus parent; layout splith;   focus child; mode "default"
         bindsym v focus parent; layout splitv;   focus child; mode "default"
         bindsym Escape mode "default"
         bindsym Return mode "default"
         bindsym q mode "default"
     }

     bindsym $mod+Shift+o resize shrink width 640 px or 25 ppt; focus right; resize grow width 640 px or 25 ppt; move right
     bindsym $mod+o focus left; focus parent; move right; move right; focus child; resize grow width 640 px or 25 ppt
     bindsym $mod+m move right; focus up; move left; focus right

     # Make the currently focused window a scratchpad
     bindsym $mod+Shift+minus move scratchpad
     # Show the first scratchpad window
     bindsym $mod+minus scratchpad show

     bindsym $mod+b border toggle

     # resize window (you can also use the mouse for that)
     mode "resize" {
             # These bindings trigger as soon as you enter the resize mode

             # Pressing left will shrink the window’s width.
             # Pressing right will grow the window’s width.
             # Pressing up will shrink the window’s height.
             # Pressing down will grow the window’s height.
             bindsym h resize shrink width 5 px or 5 ppt
             bindsym n resize grow height 5 px or 5 ppt
             bindsym e resize shrink height 5 px or 5 ppt
             bindsym l resize grow width 5 px or 5 ppt

             # same bindings, but for the arrow keys
             bindsym Left resize shrink width 5 px or 5 ppt
             bindsym Down resize grow height 5 px or 5 ppt
             bindsym Up resize shrink height 5 px or 5 ppt
             bindsym Right resize grow width 5 px or 5 ppt

             # back to normal: Enter or Escape or r
             bindsym Escape mode "default"
             bindsym Return mode "default"
             bindsym r mode "default"
             bindsym q mode "default"
     }

     bindsym $mod+r mode "resize"

     # Start i3bar to display a workspace bar (plus the system information i3status
     # finds out, if available)
     bar {
             status_command i3status
             position bottom
     }

     # border style for new windows: normal or pixel <<size>>
     # new_window normal
     new_window pixel 1
     # hide_edge_borders none|vertical|horizontal|both
     hide_edge_borders none

     # class                 border  backgr. text    indicator child_border
     # # numix chrome theme
     # client.focused          #2d2d2d #2d2d2d #00ffff #9575cd   #aa00ff
     # # last focused split
     # client.focused_inactive #424242 #424242 #969696 #292d2e   #222222
     # client.unfocused        #969696 #969696 #2d2d2d #484e50   #5f676a

     # # bright blue
     # # class                 border  backgr. text    indicator child_border
     # client.focused          #aae3fa #aae3fa #2196f3 #3f51b5   #FFFFFF
     # client.focused_inactive #FFFFFF #FFFFFF #37a4d6 #FFFFFF   #FFFFFF
     # client.unfocused        #FFFFFF #FFFFFF #EEEEEE #FFFFFF   #FFFFFF
     # client.urgent           #FFFFFF #ff9388 #ffffff #ff9388   #ff9388
     # client.background       #FFFFFF

     # # numix gray
     # # class                 border  backgr. text    indicator child_border
     # client.focused          #424242 #424242 #aae3fa #37a4d6   #424242
     # client.focused_inactive #2d2d2d #2d2d2d #37a4d6 #444444   #2d2d2d
     # client.unfocused        #2d2d2d #2d2d2d #777777 #444444   #2d2d2d
     # client.urgent           #2f343a #d64937 #ffffff #d64937   #d64937
     # client.background       #37474F

     # numix blue
     # class                 border  backgr. text    indicator child_border
     client.focused          #37a4d6 #37a4d6 #2d2d2d #aae3fa   #37a4d6
     client.focused_inactive #2d2d2d #2d2d2d #37a4d6 #444444   #2d2d2d
     client.unfocused        #2d2d2d #2d2d2d #777777 #444444   #2d2d2d
     client.urgent           #2f343a #d64937 #ffffff #d64937   #d64937
     client.background       #37474F

     # # numix green
     # # class                 border  backgr. text    indicator child_border
     # client.focused          #0f9d58 #0f9d58 #2d2d2d #17f288   #0f9d58
     # client.focused_inactive #2d2d2d #2d2d2d #0f9d58 #444444   #2d2d2d
     # client.unfocused        #2d2d2d #2d2d2d #777777 #444444   #2d2d2d
     # client.urgent           #2f343a #d64937 #ffffff #d64937   #d64937
     # client.background       #37474F

     # # numix red
     # client.focused          #d64937 #d64937 #2d2d2d #ff9388   #d64937
     # client.focused_inactive #2d2d2d #2d2d2d #d64937 #444444   #2d2d2d
     # client.unfocused        #2d2d2d #2d2d2d #777777 #444444   #2d2d2d
     # client.urgent           #2f343a #ff3e2b #ffffff #ff3e2b   #ff3e2b
     # client.background       #37474F

     # Other Colors
     # bright blue
     # client.focused          #2196f3 #2196f3 #ffffff #9575cd   #aa00ff
     # client.focused_inactive #3f51b5 #3f51b5 #ffffff #484e50   #5f676a

     # grayish
     # client.focused          #607d8b #607d8b #ffffff #9575cd   #aa00ff
     # client.focused_inactive #455a64 #455a64 #ffffff #484e50   #5f676a

     # flatui green/teal
     # client.focused          #1abc9c #1abc9c #ffffff #9575cd   #aa00ff
     # client.focused_inactive #8cddcd #8cddcd #ffffff #484e50   #5f676a

     # client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

     exec urxvt
   #+END_SRC

*** PC start-up apps

   #+BEGIN_SRC conf :tangle (if (not amd/using-pocketchip) "~/.i3/config" "no") :mkdirp yes
     exec --no-startup-id xset r rate 200 30
     exec nm-applet
     exec blueman-applet
     exec xfce4-clipman
     # exec cinnamon-settings-daemon # use lxappearance instead

     exec xscreensaver

     # exec --no-startup-id xinput set-prop "anthony’s trackpad" "Synaptics Two-Finger Scrolling" 1, 1
     # exec --no-startup-id xinput set-prop "anthony’s trackpad" "Synaptics Scrolling Distance" -156, -156
   #+END_SRC

   #+BEGIN_SRC conf :tangle no
     # Coordinate Transformation Matrix (144): 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000
     # Device Accel Profile (262):     1
     # Device Accel Constant Deceleration (263):       2.500000
     # Device Accel Adaptive Deceleration (264):       1.000000
     # Device Accel Velocity Scaling (265):    12.500000
     # Synaptics Edges (288):  -2393, 2651, -2030, 2139
     # Synaptics Finger (289): 70, 75, 0
     # Synaptics Tap Time (290):       180
     # Synaptics Tap Move (291):       346
     # Synaptics Tap Durations (292):  180, 180, 100
     # Synaptics ClickPad (293):       1
     # Synaptics Middle Button Timeout (294):  0
     # Synaptics Two-Finger Pressure (295):    282
     # Synaptics Two-Finger Width (296):       7
     # Synaptics Scrolling Distance (297):     -156, -156
     # Synaptics Edge Scrolling (298): 1, 0, 0
     # Synaptics Two-Finger Scrolling (299):   1, 1
     # Synaptics Move Speed (300):     1.000000, 1.750000, 0.025374, 0.000000
     # Synaptics Off (301):    0
     # Synaptics Locked Drags (302):   0
     # Synaptics Locked Drags Timeout (303):   5000
     # Synaptics Tap Action (304):     2, 3, 0, 0, 1, 3, 0
     # Synaptics Click Action (305):   1, 3, 0
     # Synaptics Circular Scrolling (306):     0
     # Synaptics Circular Scrolling Distance (307):    0.100000
     # Synaptics Circular Scrolling Trigger (308):     0
     # Synaptics Circular Pad (309):   0
     # Synaptics Palm Detection (310): 0
     # Synaptics Palm Dimensions (311):        10, 200
     # Synaptics Coasting Speed (312): 20.000000, 50.000000
     # Synaptics Pressure Motion (313):        30, 160
     # Synaptics Pressure Motion Factor (314): 1.000000, 1.000000
     # Synaptics Resolution Detect (315):      1
     # Synaptics Grab Event Device (316):      1
     # Synaptics Gestures (317):       1
     # Synaptics Capabilities (318):   1, 0, 0, 1, 1, 0, 0
     # Synaptics Pad Resolution (319): 45, 46
     # Synaptics Area (320):   0, 0, 0, 0
     # Synaptics Soft Button Areas (321):      129, 0, 1661, 0, 0, 0, 0, 0
     # Synaptics Noise Cancellation (322):     4, 4
   #+END_SRC

** i3status

   #+NAME: interface
   #+BEGIN_SRC sh :cache yes
     ls /proc/sys/net/ipv4/conf/ | grep -v -E '(all|lo|default)'
   #+END_SRC

   #+BEGIN_SRC conf :tangle ~/.i3status.conf :noweb yes
     # i3status configuration file.
     # see "man i3status" for documentation.

     # It is important that this file is edited as UTF-8.
     # The following line should contain a sharp s:
     # ß
     # If the above line is not correctly displayed, fix your editor first!

     general {
             colors = true
             interval = 5
     }

     # order += "disk /"
     # order += "run_watch DHCP"
     # order += "run_watch VPN"
     order += "wireless wlan0"
     order += "ethernet <<interface()>>"
     order += "ipv6"
     # order += "battery 0"
     order += "load"
     order += "tztime local"

     wireless wlan0 {
             format_up = "wifi: (%quality at %essid) %ip"
             format_down = "wifi: down"
     }

     ethernet <<interface()>> {
             # if you use %speed, i3status requires root privileges
             format_up = "eth: %ip (%speed)"
             format_down = "eth: down"
     }

     battery 0 {
             format = "%status %percentage %remaining"
     }

     run_watch DHCP {
             pidfile = "/var/run/dhclient*.pid"
     }

     run_watch VPN {
             pidfile = "/var/run/vpnc/pid"
     }

     tztime local {
             format = "%Y-%m-%d %H:%M"
     }

     load {
             format = "%1min"
     }

     disk "/" {
             format = "%avail"
     }
   #+END_SRC


* Fish

  #+BEGIN_SRC fish :tangle "~/.config/fish/config.fish" :mkdirp yes
    function fish_title
      true
    end

    function fish_user_key_bindings
      # Default Bindings
      #   Alt+Up or Down to move through last argument history
      #   Alt+Left or Right to move through dirhist

      # Alt+Ctrl+n or e to move through last argument history
      bind \e\cn history-token-search-forward
      bind \e\ce history-token-search-backward
      bind -M insert \e\cn history-token-search-forward
      bind -M insert \e\ce history-token-search-backward

      # Alt+Ctrl+h or l to move through dirhist
      bind \e\ch prevd-or-backward-word
      bind \e\cl nextd-or-forward-word
      bind -M insert \e\ch prevd-or-backward-word
      bind -M insert \e\cl nextd-or-forward-word

      # Ctrl-e accept current completion
      bind -M insert \ce forward-char

      # sync history accross sessions before reverse history search
      bind -k up 'history --merge; up-or-search'
      bind -M insert -k up 'history --merge; up-or-search'

      # Also Use Ctrl-p and Ctrl-n for reverse history search
      bind -M insert \cp 'history --merge; up-or-search'
      bind -M insert \cn down-or-search
      bind \cp 'history --merge; up-or-search'
      bind \cn down-or-search
    end

    if set -q INSIDE_EMACS
      fish_default_key_bindings
    else
      fish_vi_key_bindings
    end

    # Prepend PATH variable
    set -x PATH $HOME/.local/bin $PATH
    set -x PATH $HOME/.rbenv/bin $PATH
    set -x PATH $HOME/.cargo/bin $PATH
    set -x PATH $HOME/.luarocks/bin $PATH
    set -x PATH $HOME/.npm-packages/bin $PATH
    set -x fish_color_history_current yellow
    set -x SHELL fish

    function set-my-aliases
      alias lltr='ll -tr'
      alias llsr='ll -Sr'
      alias lla='ls -lha'
      alias ll='ls -lh'
      alias la='ls -a'
      alias l='ls -CF'

      alias u='cd ..'

      alias gll='git log --abbrev-commit --graph --decorate --date=relative --all --pretty=format:\'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\''
      alias gs='git status'
      alias ga='git add'
      alias gc='git commit'
      alias gca='git commit -a'
      alias gwd='git diff'
      alias gwdc='git diff --cached'
      alias gp='git pull'
      alias gpp='git push'
      alias gco='git checkout'

      # fish specific aliases
      alias o=prevd
      alias d=dirh
      alias pd=prevd
      alias nd=nextd

      function h --description "merge history from other sessions and display with less"
        history --merge
        history
      end

      function setinputprefs
        xset r rate 200 30
        if xinput list --name-only | grep -qs 'anthony’s trackpad'
          xinput set-prop 'anthony’s trackpad' 'Synaptics Two-Finger Scrolling' 1, 1
          xinput set-prop 'anthony’s trackpad' 'Synaptics Scrolling Distance' -156, -156
        end
      end

      function continually-setinputprefs
        while true
          setinputprefs
          sleep 180
        end
      end

      function setgitauthor
        git config user.name "AnthonyDiGirolamo"
        git config user.email "anthony.digirolamo@gmail.com"
      end

      # Disable CTRL-S Freeze
      stty -ixon
      alias v='vim'
      alias tmux='tmux -2'

      if test -d $EMACSHOMEPREFIX
        set -x PATH $EMACSHOMEPREFIX $PATH
      end

      if string match -q -r 'Darwin' (uname -a)
        alias emacs='/Applications/Emacs.app/Contents/MacOS/Emacs'
      end

      alias ew="emacs-w32 &"
      alias e="emacs -nw"
      alias eg="emacs &"
      alias ed="emacs --daemon"
      alias ec="emacsclient --alternate-editor='' -nw"
      alias ecg="emacsclient --alternate-editor='' --no-wait --create-frame"

      set -x EDITOR "vim"

      if which emacsclient 1>/dev/null
        if test -z $DISPLAY
            # no display
            set -x EDITOR "emacsclient --alternate-editor='' -nw"
        else
            # display set
            set -x EDITOR "emacsclient --alternate-editor='' --no-wait --create-frame"
        end
      end

      set -x VISUAL $EDITOR
    end
    set-my-aliases

    # function dl --description "always vertical dirh"
    #   for dir in $dirprev
    #     echo $dir
    #   end
    #   set_color cyan
    #   echo (pwd)
    #   set_color normal
    #   for dir in $dirnext
    #     echo $dir
    #   end
    # end

    # Prompt Setup
    set using_android 0
    if string match -q -r 'Android' (uname -a)
      set using_android 1
    end

    set powerline_right_arrow ''
    if set -q INSIDE_EMACS; or string match -q -r 'raspberrypi|chip' (uname -a)
      set powerline_right_arrow ''
    end

    set powerline_insert 5f5fff
    set powerline_blue1 5f87ff
    set powerline_blue2 87afff
    set powerline_blue3 dfdfff

    function fish_prompt
      set_color -b $powerline_blue1 black
      if test 1 != $using_android
        printf ' %s@%s ' (whoami) (hostname|cut -d .  -f 1)
      else
        echo -n ' '
      end

      set_color -b $powerline_blue2 $powerline_blue1
      echo -n $powerline_right_arrow

      set_color -b $powerline_blue2 black
      echo -n '' (prompt_pwd) ''

      # if test -e .git
      if set branch (git rev-parse --abbrev-ref HEAD 2>/dev/null)
        set_color -b $powerline_blue3 $powerline_blue2
        echo -n $powerline_right_arrow

        set_color -b $powerline_blue3 black
        echo -n '' $branch ''

        set_color -b normal $powerline_blue3
        echo -n $powerline_right_arrow
      else
        set_color -b normal $powerline_blue2
        echo -n $powerline_right_arrow
      end

      echo -n ' '
      set_color normal
    end

    # The fish_mode_prompt function is prepended to the prompt
    function fish_mode_prompt --description "Displays the current mode"
      # Do nothing if not in vi mode
      if test "$fish_key_bindings" = "fish_vi_key_bindings"
        switch $fish_bind_mode
          case default
            set_color --bold --background red white
            echo ' N '
            set_color --background $powerline_blue1 red
          case insert
            set_color --bold --background $powerline_insert white
            echo ' I '
            set_color --background $powerline_blue1 $powerline_insert
          case replace-one
            set_color --bold --background green white
            echo ' R '
            set_color --background $powerline_blue1 green
          case visual
            set_color --bold --background magenta white
            echo ' V '
            set_color --background $powerline_blue1 magenta
        end
        echo $powerline_right_arrow
      end
        set_color normal
    end

    function source-bash-aliases --description "Try to source bash aliases, not fully working"
      bash -i -c 'alias' > ~/.active_aliases
      for line in (cat ~/.active_aliases) # | grep 'vim\|emacs'
        set_color -b normal $powerline_blue2
        echo $line
        set_color -b normal normal
        eval "$line"
      end
      rm -f ~/.active_aliases
    end
  #+END_SRC


* Ranger

  - http://ranger.nongnu.org/
  - https://github.com/ranger/ranger

  #+BEGIN_SRC conf :tangle "~/.config/ranger/rc.conf" :mkdirp yes
    # ===================================================================
    # This file contains the default startup commands for ranger.
    # To change them, it is recommended to create the file
    # ~/.config/ranger/rc.conf and add your custom commands there.
    #
    # If you copy this whole file there, you may want to set the environment
    # variable RANGER_LOAD_DEFAULT_RC to FALSE to avoid loading it twice.
    #
    # The purpose of this file is mainly to define keybindings and settings.
    # For running more complex python code, please create a plugin in "plugins/" or
    # a command in "commands.py".
    #
    # Each line is a command that will be run before the user interface
    # is initialized.  As a result, you can not use commands which rely
    # on the UI such as :delete or :mark.
    # ===================================================================

    # ===================================================================
    # == Options
    # ===================================================================

    # Which viewmode should be used?  Possible values are:
    #     miller: Use miller columns which show multiple levels of the hierarchy
    #     multipane: Midnight-commander like multipane view showing all tabs next
    #                to each other
    set viewmode miller
    #set viewmode multipane

    # How many columns are there, and what are their relative widths?
    set column_ratios 1,3,4

    # Which files should be hidden? (regular expression)
    set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$

    # Show hidden files? You can toggle this by typing 'zh'
    set show_hidden false

    # Ask for a confirmation when running the "delete" command?
    # Valid values are "always", "never", "multiple" (default)
    # With "multiple", ranger will ask only if you delete multiple files at once.
    set confirm_on_delete multiple

    # Which script is used to generate file previews?
    # ranger ships with scope.sh, a script that calls external programs (see
    # README.md for dependencies) to preview images, archives, etc.
    set preview_script ~/.config/ranger/scope.sh

    # Use the external preview script or display simple plain text or image previews?
    set use_preview_script true

    # Automatically count files in the directory, even before entering them?
    set automatically_count_files true

    # Open all images in this directory when running certain image viewers
    # like feh or sxiv?  You can still open selected files by marking them.
    set open_all_images true

    # Be aware of version control systems and display information.
    set vcs_aware false

    # State of the three backends git, hg, bzr. The possible states are
    # disabled, local (only show local info), enabled (show local and remote
    # information).
    set vcs_backend_git enabled
    set vcs_backend_hg disabled
    set vcs_backend_bzr disabled

    # Use one of the supported image preview protocols
    set preview_images true

    # Set the preview image method. Supported methods:
    #
    # * w3m (default):
    #   Preview images in full color with the external command "w3mimgpreview"?
    #   This requires the console web browser "w3m" and a supported terminal.
    #   It has been successfully tested with "xterm" and "urxvt" without tmux.
    #
    # * iterm2:
    #   Preview images in full color using iTerm2 image previews
    #   (http://iterm2.com/images.html). This requires using iTerm2 compiled
    #   with image preview support.
    #
    # * urxvt:
    #   Preview images in full color using urxvt image backgrounds. This
    #   requires using urxvt compiled with pixbuf support.
    #
    # * urxvt-full:
    #   The same as urxvt but utilizing not only the preview pane but the
    #   whole terminal window.
    set preview_images_method urxvt

    # Use a unicode "..." character to mark cut-off filenames?
    set unicode_ellipsis false

    # Show dotfiles in the bookmark preview box?
    set show_hidden_bookmarks true

    # Which colorscheme to use?  These colorschemes are available by default:
    # default, jungle, snow, solarized
    set colorscheme default

    # Preview files on the rightmost column?
    # And collapse (shrink) the last column if there is nothing to preview?
    set preview_files true
    set preview_directories true
    set collapse_preview true

    # Save the console history on exit?
    set save_console_history true

    # Draw the status bar on top of the browser window (default: bottom)
    set status_bar_on_top false

    # Draw a progress bar in the status bar which displays the average state of all
    # currently running tasks which support progress bars?
    set draw_progress_bar_in_status_bar true

    # Draw borders around columns?
    set draw_borders false

    # Display the directory name in tabs?
    set dirname_in_tabs false

    # Enable the mouse support?
    set mouse_enabled true

    # Display the file size in the main column or status bar?
    set display_size_in_main_column true
    set display_size_in_status_bar true

    # Display files tags in all columns or only in main column?
    set display_tags_in_all_columns true

    # Set a title for the window?
    set update_title false

    # Set the title to "ranger" in the tmux program?
    set update_tmux_title false

    # Shorten the title if it gets long?  The number defines how many
    # directories are displayed at once, 0 turns off this feature.
    set shorten_title 3

    # Abbreviate $HOME with ~ in the titlebar (first line) of ranger?
    set tilde_in_titlebar false

    # How many directory-changes or console-commands should be kept in history?
    set max_history_size 20
    set max_console_history_size 50

    # Try to keep so much space between the top/bottom border when scrolling:
    set scroll_offset 8

    # Flush the input after each key hit?  (Noticeable when ranger lags)
    set flushinput true

    # Padding on the right when there's no preview?
    # This allows you to click into the space to run the file.
    set padding_right true

    # Save bookmarks (used with mX and `X) instantly?
    # This helps to synchronize bookmarks between multiple ranger
    # instances but leads to *slight* performance loss.
    # When false, bookmarks are saved when ranger is exited.
    set autosave_bookmarks true

    # You can display the "real" cumulative size of directories by using the
    # command :get_cumulative_size or typing "dc".  The size is expensive to
    # calculate and will not be updated automatically.  You can choose
    # to update it automatically though by turning on this option:
    set autoupdate_cumulative_size false

    # Turning this on makes sense for screen readers:
    set show_cursor false

    # One of: size, natural, basename, atime, ctime, mtime, type, random
    set sort natural

    # Additional sorting options
    set sort_reverse false
    set sort_case_insensitive true
    set sort_directories_first true
    set sort_unicode false

    # Enable this if key combinations with the Alt Key don't work for you.
    # (Especially on xterm)
    set xterm_alt_key false

    # Whether to include bookmarks in cd command
    set cd_bookmarks true

    # Avoid previewing files larger than this size, in bytes.  Use a value of 0 to
    # disable this feature.
    set preview_max_size 0

    # Add the highlighted file to the path in the titlebar
    set show_selection_in_titlebar true

    # The delay that ranger idly waits for user input, in milliseconds, with a
    # resolution of 100ms.  Lower delay reduces lag between directory updates but
    # increases CPU load.
    set idle_delay 2000

    # When the metadata manager module looks for metadata, should it only look for
    # a ".metadata.json" file in the current directory, or do a deep search and
    # check all directories above the current one as well?
    set metadata_deep_search false

    # Clear all existing filters when leaving a directory
    set clear_filters_on_dir_change false

    # Disable displaying line numbers in main column
    set line_numbers false

    # ===================================================================
    # == Local Options
    # ===================================================================
    # You can set local options that only affect a single directory.

    # Examples:
    # setlocal path=~/downloads sort mtime

    # ===================================================================
    # == Command Aliases in the Console
    # ===================================================================

    alias e    edit
    alias q    quit
    alias q!   quitall
    alias qa   quitall
    alias qall quitall
    alias setl setlocal

    alias filter     scout -prt
    alias find       scout -aeit
    alias mark       scout -mr
    alias unmark     scout -Mr
    alias search     scout -rs
    alias search_inc scout -rts
    alias travel     scout -aefiklst

    # ===================================================================
    # == Define keys for the browser
    # ===================================================================

    # Basic
    map     Q quit!
    map     q quit
    copymap q ZZ ZQ

    map R     reload_cwd
    map <C-r> reset
    map <C-l> redraw_window
    map <C-c> abort
    map <esc> change_mode normal
    map ~ set viewmode!

    map i display_file
    map ? help
    map W display_log
    map w taskview_open
    map S shell $SHELL

    map :  console
    map ;  console
    map !  console shell%space
    map @  console -p6 shell  %%s
    map #  console shell -p%space
    map s  console shell%space
    map r  chain draw_possible_programs; console open_with%%space
    map f  console find%space
    map cd console cd%space

    # Change the line mode
    map Mf linemode filename
    map Mi linemode fileinfo
    map Mm linemode mtime
    map Mp linemode permissions
    map Ms linemode sizemtime
    map Mt linemode metatitle

    # Tagging / Marking
    map t       tag_toggle
    map ut      tag_remove
    map "<any>  tag_toggle tag=%any
    map <Space> mark_files toggle=True
    map v       mark_files all=True toggle=True
    map uv      mark_files all=True val=False
    map V       toggle_visual_mode
    map uV      toggle_visual_mode reverse=True

    # For the nostalgics: Midnight Commander bindings
    map <F1> help
    map <F3> display_file
    map <F4> edit
    map <F5> copy
    map <F6> cut
    map <F7> console mkdir%space
    map <F8> console delete
    map <F10> exit

    # In case you work on a keyboard with dvorak layout
    map <UP>       move up=1
    map <DOWN>     move down=1
    map <LEFT>     move left=1
    map <RIGHT>    move right=1
    map <HOME>     move to=0
    map <END>      move to=-1
    map <PAGEDOWN> move down=1   pages=True
    map <PAGEUP>   move up=1     pages=True
    map <CR>       move right=1
    #map <DELETE>   console delete
    map <INSERT>   console touch%space

    # VIM-like
    copymap <UP>       e
    copymap <DOWN>     n
    copymap <LEFT>     h
    copymap <RIGHT>    l
    copymap <HOME>     gg
    copymap <END>      G
    copymap <PAGEDOWN> <C-F>
    copymap <PAGEUP>   <C-B>

    map N  move down=0.5  pages=True
    map E  move up=0.5    pages=True
    copymap N <C-D>
    copymap E <C-U>

    # Jumping around
    map H     history_go -1
    map L     history_go 1
    map ]     move_parent 1
    map [     move_parent -1
    map }     traverse

    map gh cd ~
    map ge cd /etc
    map gu cd /usr
    map gd cd /dev
    map gl cd -r .
    map gL cd -r %f
    map go cd /opt
    map gv cd /var
    map gm cd /media
    map gM cd /mnt
    map gs cd /srv
    map gr cd /
    map gR eval fm.cd(ranger.RANGERDIR)
    map g/ cd /
    map g? cd /usr/share/doc/ranger

    # External Programs
    # map E  edit
    map du shell -p du --max-depth=1 -h --apparent-size
    map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
    map yp shell -f echo -n %d/%f | xsel -i; xsel -o | xsel -i -b
    map yd shell -f echo -n %d    | xsel -i; xsel -o | xsel -i -b
    map yn shell -f echo -n %f    | xsel -i; xsel -o | xsel -i -b

    # Filesystem Operations
    map =  chmod

    map cw console rename%space
    map a  rename_append
    map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
    map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

    map pp paste
    map po paste overwrite=True
    map pP paste append=True
    map pO paste overwrite=True append=True
    map pl paste_symlink relative=False
    map pL paste_symlink relative=True
    map phl paste_hardlink
    map pht paste_hardlinked_subtree

    map dD console delete

    map dd cut
    map ud uncut
    map da cut mode=add
    map dr cut mode=remove
    map dt cut mode=toggle

    map yy copy
    map uy uncut
    map ya copy mode=add
    map yr copy mode=remove
    map yt copy mode=toggle

    # Temporary workarounds
    map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
    map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
    map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
    map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
    map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
    map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
    map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
    map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)

    # Searching
    map /  console search%space
    map k  search_next
    map K  search_next forward=False
    map ct search_next order=tag
    map cs search_next order=size
    map ci search_next order=mimetype
    map cc search_next order=ctime
    map cm search_next order=mtime
    map ca search_next order=atime

    # Tabs
    map <C-n>     tab_new ~
    map <C-w>     tab_close
    map <TAB>     tab_move 1
    map <S-TAB>   tab_move -1
    map <A-Right> tab_move 1
    map <A-Left>  tab_move -1
    map gt        tab_move 1
    map gT        tab_move -1
    map gn        tab_new ~
    map gc        tab_close
    map uq        tab_restore
    map <a-1>     tab_open 1
    map <a-2>     tab_open 2
    map <a-3>     tab_open 3
    map <a-4>     tab_open 4
    map <a-5>     tab_open 5
    map <a-6>     tab_open 6
    map <a-7>     tab_open 7
    map <a-8>     tab_open 8
    map <a-9>     tab_open 9

    # Sorting
    map or set sort_reverse!
    map oz set sort=random
    map os chain set sort=size;      set sort_reverse=False
    map ob chain set sort=basename;  set sort_reverse=False
    map on chain set sort=natural;   set sort_reverse=False
    map om chain set sort=mtime;     set sort_reverse=False
    map oc chain set sort=ctime;     set sort_reverse=False
    map oa chain set sort=atime;     set sort_reverse=False
    map ot chain set sort=type;      set sort_reverse=False
    map oe chain set sort=extension; set sort_reverse=False

    map oS chain set sort=size;      set sort_reverse=True
    map oB chain set sort=basename;  set sort_reverse=True
    map oN chain set sort=natural;   set sort_reverse=True
    map oM chain set sort=mtime;     set sort_reverse=True
    map oC chain set sort=ctime;     set sort_reverse=True
    map oA chain set sort=atime;     set sort_reverse=True
    map oT chain set sort=type;      set sort_reverse=True
    map oE chain set sort=extension; set sort_reverse=True

    map dc get_cumulative_size

    # Settings
    map zc    set collapse_preview!
    map zd    set sort_directories_first!
    map zh    set show_hidden!
    map <C-h> set show_hidden!
    map zI    set flushinput!
    map zi    set preview_images!
    map zm    set mouse_enabled!
    map zp    set preview_files!
    map zP    set preview_directories!
    map zs    set sort_case_insensitive!
    map zu    set autoupdate_cumulative_size!
    map zv    set use_preview_script!
    map zf    console filter%space

    # Bookmarks
    map `<any>  enter_bookmark %any
    map '<any>  enter_bookmark %any
    map m<any>  set_bookmark %any
    map um<any> unset_bookmark %any

    map m<bg>   draw_bookmarks
    copymap m<bg>  um<bg> `<bg> '<bg>

    # Generate all the chmod bindings with some python help:
    eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
    eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
    eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
    eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
    eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

    eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
    eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
    eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
    eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
    eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

    # ===================================================================
    # == Define keys for the console
    # ===================================================================
    # Note: Unmapped keys are passed directly to the console.

    # Basic
    cmap <tab>   eval fm.ui.console.tab()
    cmap <s-tab> eval fm.ui.console.tab(-1)
    cmap <ESC>   eval fm.ui.console.close()
    cmap <CR>    eval fm.ui.console.execute()
    cmap <C-l>   redraw_window

    copycmap <ESC> <C-c>
    copycmap <CR>  <C-j>

    # Move around
    cmap <up>    eval fm.ui.console.history_move(-1)
    cmap <down>  eval fm.ui.console.history_move(1)
    cmap <left>  eval fm.ui.console.move(left=1)
    cmap <right> eval fm.ui.console.move(right=1)
    cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
    cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
    cmap <a-left>   eval fm.ui.console.move_word(left=1)
    cmap <a-right>  eval fm.ui.console.move_word(right=1)

    # Line Editing
    cmap <backspace>  eval fm.ui.console.delete(-1)
    cmap <delete>     eval fm.ui.console.delete(0)
    cmap <C-w>        eval fm.ui.console.delete_word()
    cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
    cmap <C-k>        eval fm.ui.console.delete_rest(1)
    cmap <C-u>        eval fm.ui.console.delete_rest(-1)
    cmap <C-y>        eval fm.ui.console.paste()

    # And of course the emacs way
    copycmap <up>        <C-p>
    copycmap <down>      <C-n>
    copycmap <left>      <C-b>
    copycmap <right>     <C-f>
    copycmap <home>      <C-a>
    copycmap <end>       <C-e>
    copycmap <delete>    <C-d>
    copycmap <backspace> <C-h>

    # Note: There are multiple ways to express backspaces.  <backspace> (code 263)
    # and <backspace2> (code 127).  To be sure, use both.
    copycmap <backspace> <backspace2>

    # This special expression allows typing in numerals:
    cmap <allow_quantifiers> false

    # ===================================================================
    # == Pager Keybindings
    # ===================================================================

    # Movement
    pmap  <down>      pager_move  down=1
    pmap  <up>        pager_move  up=1
    pmap  <left>      pager_move  left=4
    pmap  <right>     pager_move  right=4
    pmap  <home>      pager_move  to=0
    pmap  <end>       pager_move  to=-1
    pmap  <pagedown>  pager_move  down=1.0  pages=True
    pmap  <pageup>    pager_move  up=1.0    pages=True
    pmap  <C-d>       pager_move  down=0.5  pages=True
    pmap  <C-u>       pager_move  up=0.5    pages=True

    copypmap <UP>       e  <C-p>
    copypmap <DOWN>     n  <C-n> <CR>
    copypmap <LEFT>     h
    copypmap <RIGHT>    l
    copypmap <HOME>     g
    copypmap <END>      G
    copypmap <C-d>      d
    copypmap <C-u>      u
    copypmap <PAGEDOWN>    f  <C-F>  <Space>
    copypmap <PAGEUP>   p  b  <C-B>

    # Basic
    pmap     <C-l> redraw_window
    pmap     <ESC> pager_close
    copypmap <ESC> q Q i <F3>
    pmap E      edit_file

    # ===================================================================
    # == Taskview Keybindings
    # ===================================================================

    # Movement
    tmap <up>        taskview_move up=1
    tmap <down>      taskview_move down=1
    tmap <home>      taskview_move to=0
    tmap <end>       taskview_move to=-1
    tmap <pagedown>  taskview_move down=1.0  pages=True
    tmap <pageup>    taskview_move up=1.0    pages=True
    tmap <C-d>       taskview_move down=0.5  pages=True
    tmap <C-u>       taskview_move up=0.5    pages=True

    copytmap <UP>       e  <C-p>
    copytmap <DOWN>     n  <C-n> <CR>
    copytmap <HOME>     g
    copytmap <END>      G
    copytmap <C-u>      u
    copytmap <PAGEDOWN>    f  <C-F>  <Space>
    copytmap <PAGEUP>   p  b  <C-B>

    # Changing priority and deleting tasks
    tmap N          eval -q fm.ui.taskview.task_move(-1)
    tmap E          eval -q fm.ui.taskview.task_move(0)
    tmap dd         eval -q fm.ui.taskview.task_remove()
    tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
    tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
    tmap <delete>   eval -q fm.ui.taskview.task_remove()

    # Basic
    tmap <C-l> redraw_window
    tmap <ESC> taskview_close
    copytmap <ESC> q Q w <C-c>
  #+END_SRC


* GTK & Gnome Settings

** GTK Icon Sizes for hidpi

   #+BEGIN_SRC sh
     xfconf-query -c xsettings -p /Gtk/IconSizes -s "gtk-menu=48,48:gtk-small-toolbar=48,48:gtk-large-toolbar=64,64:gtk-button=48,48:gtk-dnd=64,64:gtk-dialog=128,128"
     ToolbarIconSize 3
   #+END_SRC

** Gnome Window Modifier key

   #+BEGIN_SRC sh
     gsettings set org.gnome.desktop.wm.preferences resize-with-right-button true
     gsettings set org.gnome.desktop.wm.preferences mouse-button-modifier '<Alt>'
   #+END_SRC


* Alacritty

  https://github.com/jwilm/alacritty

  #+BEGIN_SRC yaml :tangle "~/.config/alacritty/alacritty.yml" :mkdirp yes
    # Configuration for Alacritty, the GPU enhanced terminal emulator


    # Any items in the `env` entry below will be added as
    # environment variables. Some entries may override variables
    # set by alacritty it self.
    env:
      # TERM env customization.
      #
      # If this property is not set, alacritty will set it to xterm-256color.
      #
      # Note that some xterm terminfo databases don't declare support for italics.
      # You can verify this by checking for the presence of `smso` and `sitm` in
      # `infocmp xterm-256color`.
      TERM: xterm-256color

    # Window dimensions in character columns and lines
    # (changes require restart)
    window:
      dimensions:
        columns: 80
        lines: 24

    # Adds this many blank pixels of padding around the window
    # Units are physical pixels; this is not DPI aware.
    # (change requires restart)
      padding:
        x: 2
        y: 2

    # Display tabs using this many cells (changes require restart)
    tabspaces: 8

    # When true, bold text is drawn using the bright variant of colors.
    draw_bold_text_with_bright_colors: true

    # Font configuration (changes require restart)
    #
    # Important font attributes like antialiasing, subpixel aa, and hinting can be
    # controlled through fontconfig. Specifically, the following attributes should
    # have an effect:
    #
    # * hintstyle
    # * antialias
    # * lcdfilter
    # * rgba
    #
    # For instance, if you wish to disable subpixel antialiasing, you might set the
    # rgba property to "none". If you wish to completely disable antialiasing, you
    # can set antialias to false.
    #
    # Please see these resources for more information on how to use fontconfig
    #
    # * https://wiki.archlinux.org/index.php/font_configuration#Fontconfig_configuration
    # * file:///usr/share/doc/fontconfig/fontconfig-user.html
    font:
      # The normal (roman) font face to use.
      normal:
        family: PragmataProMono # should be "Menlo" or something on macOS.
        # Style can be specified to pick a specific face.
        # style: Regular

      # The bold font face
      bold:
        family: PragmataProMono # should be "Menlo" or something on macOS.
        # Style can be specified to pick a specific face.
        # style: Bold

      # The italic font face
      italic:
        family: PragmataProMono # should be "Menlo" or something on macOS.
        # Style can be specified to pick a specific face.
        # style: Italic

      # Point size of the font
      size: 18.0

      # Offset is the extra space around each character. offset.y can be thought of
      # as modifying the linespacing, and offset.x as modifying the letter spacing.
      offset:
        x: -1

      # Glyph offset determines the locations of the glyphs within their cells with
      # the default being at the bottom. Increase the x offset to move the glyph to
      # the right, increase the y offset to move the glyph upward.
      glyph_offset:
        x: 0
        y: 0

      # OS X only: use thin stroke font rendering. Thin strokes are suitable
      # for retina displays, but for non-retina you probably want this set to
      # false.
      use_thin_strokes: true

    # Should display the render timer
    render_timer: false

    # Use custom cursor colors. If true, display the cursor in the cursor.foreground
    # and cursor.background colors, otherwise invert the colors of the cursor.
    custom_cursor_colors: false

    # Colors (Tomorrow Night Bright)
    colors:
      # Default colors
      primary:
        background: '0x2d2d2d'
        foreground: '0xd3d0c8'

      # Colors the cursor will use if `custom_cursor_colors` is true
      cursor:
        text: '0xd3d0c8'
        cursor: '0xd3d0c8'

      # Normal colors
      normal:
        black:   '0x000000'
        red:     '0xf2777a'
        green:   '0x99cc99'
        yellow:  '0xffcc66'
        blue:    '0x6699cc'
        magenta: '0xc397d8'
        cyan:    '0x66cccc'
        white:   '0xf2f0ec'

      # Bright colors
      bright:
        black:   '0x666666'
        red:     '0xff3334'
        green:   '0x9ec400'
        yellow:  '0xe7c547'
        blue:    '0x7aa6da'
        magenta: '0xb77ee0'
        cyan:    '0x54ced6'
        white:   '0xffffff'

      # Dim colors (Optional)
      dim:
        black:   '0x333333'
        red:     '0xf2777a'
        green:   '0x99cc99'
        yellow:  '0xffcc66'
        blue:    '0x6699cc'
        magenta: '0xcc99cc'
        cyan:    '0x66cccc'
        white:   '0xdddddd'

    # Visual Bell
    #
    # Any time the BEL code is received, Alacritty "rings" the visual bell. Once
    # rung, the terminal background will be set to white and transition back to the
    # default background color. You can control the rate of this transition by
    # setting the `duration` property (represented in milliseconds). You can also
    # configure the transition function by setting the `animation` property.
    #
    # Possible values for `animation`
    # `Ease`
    # `EaseOut`
    # `EaseOutSine`
    # `EaseOutQuad`
    # `EaseOutCubic`
    # `EaseOutQuart`
    # `EaseOutQuint`
    # `EaseOutExpo`
    # `EaseOutCirc`
    # `Linear`
    #
    # To completely disable the visual bell, set its duration to 0.
    #
    visual_bell:
      animation: EaseOutExpo
      duration: 0

    # Background opacity
    background_opacity: 1.0

    # Key bindings
    #
    # Each binding is defined as an object with some properties. Most of the
    # properties are optional. All of the alphabetical keys should have a letter for
    # the `key` value such as `V`. Function keys are probably what you would expect
    # as well (F1, F2, ..). The number keys above the main keyboard are encoded as
    # `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
    # etc.  These all match the glutin::VirtualKeyCode variants.
    #
    # Possible values for `mods`
    # `Command`, `Super` refer to the super/command/windows key
    # `Control` for the control key
    # `Shift` for the Shift key
    # `Alt` and `Option` refer to alt/option
    #
    # mods may be combined with a `|`. For example, requiring control and shift
    # looks like:
    #
    # mods: Control|Shift
    #
    # The parser is currently quite sensitive to whitespace and capitalization -
    # capitalization must match exactly, and piped items must not have whitespace
    # around them.
    #
    # Either an `action`, `chars`, or `command` field must be present.
    #   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
    #   `chars` writes the specified string every time that binding is activated.
    #     These should generally be escape sequences, but they can be configured to
    #     send arbitrary strings of bytes.
    #   `command` must be a map containing a `program` string, and `args` array of
    #     strings. For example:
    #     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }
    #
    # Want to add a binding (e.g. "PageUp") but are unsure what the X sequence
    # (e.g. "\x1b[5~") is? Open another terminal (like xterm) without tmux,
    # then run `showkey -a` to get the sequence associated to a key combination.
    key_bindings:
      - { key: V,        mods: Control|Shift,    action: Paste               }
      - { key: C,        mods: Control|Shift,    action: Copy                }
      - { key: Q,        mods: Command, action: Quit                         }
      - { key: W,        mods: Command, action: Quit                         }
      - { key: Insert,   mods: Shift,   action: PasteSelection               }
      - { key: Key0,     mods: Control, action: ResetFontSize                }
      - { key: Equals,   mods: Control, action: IncreaseFontSize             }
      - { key: Subtract, mods: Control, action: DecreaseFontSize             }
      - { key: Home,                    chars: "\x1bOH",   mode: AppCursor   }
      - { key: Home,                    chars: "\x1b[H",   mode: ~AppCursor  }
      - { key: End,                     chars: "\x1bOF",   mode: AppCursor   }
      - { key: End,                     chars: "\x1b[F",   mode: ~AppCursor  }
      - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~"                   }
      - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                   }
      - { key: PageUp,                  chars: "\x1b[5~"                     }
      - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~"                   }
      - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                   }
      - { key: PageDown,                chars: "\x1b[6~"                     }
      - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
      - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
      - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
      - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
      - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
      - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
      - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
      - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
      - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
      - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
      - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
      - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
      - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
      - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
      - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
      - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
      - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
      - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
      - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
      - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
      - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                      }
      - { key: F1,                      chars: "\x1bOP"                      }
      - { key: F2,                      chars: "\x1bOQ"                      }
      - { key: F3,                      chars: "\x1bOR"                      }
      - { key: F4,                      chars: "\x1bOS"                      }
      - { key: F5,                      chars: "\x1b[15~"                    }
      - { key: F6,                      chars: "\x1b[17~"                    }
      - { key: F7,                      chars: "\x1b[18~"                    }
      - { key: F8,                      chars: "\x1b[19~"                    }
      - { key: F9,                      chars: "\x1b[20~"                    }
      - { key: F10,                     chars: "\x1b[21~"                    }
      - { key: F11,                     chars: "\x1b[23~"                    }
      - { key: F12,                     chars: "\x1b[24~"                    }
      - { key: Back,                    chars: "\x7f"                        }
      - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                    }
      - { key: Insert,                  chars: "\x1b[2~"                     }
      - { key: Delete,                  chars: "\x1b[3~"                     }

    # Mouse bindings
    #
    # Currently doesn't support modifiers. Both the `mouse` and `action` fields must
    # be specified.
    #
    # Values for `mouse`:
    # - Middle
    # - Left
    # - Right
    # - Numeric identifier such as `5`
    #
    # Values for `action`:
    # - Paste
    # - PasteSelection
    # - Copy (TODO)
    mouse_bindings:
      - { mouse: Middle, action: PasteSelection }

    mouse:
      double_click: { threshold: 300 }
      triple_click: { threshold: 300 }

    selection:
      semantic_escape_chars: ",│`|:\"' ()[]{}<>"

    hide_cursor_when_typing: false

    # Live config reload (changes require restart)
    live_config_reload: true

    # Shell
    #
    # You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
    # Entries in shell.args are passed unmodified as arguments to the shell.
    #shell:
    #  program: /bin/bash
    #  args:
    #    - --login
  #+END_SRC


* Compton

  #+BEGIN_SRC yaml :tangle "~/.compton.conf"
    backend = "glx";
    paint-on-overlay = true;
    glx-no-stencil = true;
    glx-no-rebind-pixmap = true;
    vsync = "opengl-swc";

    # These are important. The first one enables the opengl backend. The last one is the vsync method. Depending on the driver you might need to use a different method.
    # The other options are smaller performance tweaks that work well in most cases.
    # You can find the rest of the options here: https://github.com/chjj/compton/wiki/perf-guide, and here: https://github.com/chjj/compton/wiki/vsync-guide


    # Shadow
    shadow = true;			# Enabled client-side shadows on windows.
    no-dock-shadow = true;		# Avoid drawing shadows on dock/panel windows.
    no-dnd-shadow = true;		# Don't draw shadows on DND windows.
    clear-shadow = true;		# Zero the part of the shadow's mask behind the window (experimental).
    shadow-radius = 7;		# The blur radius for shadows. (default 12)
    shadow-offset-x = -7;		# The left offset for shadows. (default -15)
    shadow-offset-y = -7;		# The top offset for shadows. (default -15)
    shadow-exclude = [
     "! name~=''",
     "n:e:Notification",
     "n:e:Plank",
     "n:e:Docky",
     "g:e:Synapse",
     "g:e:Kupfer",
     "g:e:Conky",
     "n:w:*Firefox*",
     "n:w:*Chrome*",
     "n:w:*Chromium*",
     "class_g ?= 'Notify-osd'",
     "class_g ?= 'Cairo-dock'",
     "class_g ?= 'Xfce4-notifyd'",
     "class_g ?= 'Xfce4-power-manager'"
    ];

    # The shadow exclude options are helpful if you have shadows enabled. Due to the way compton draws its shadows, certain applications will have visual glitches
    # (most applications are fine, only apps that do weird things with xshapes or argb are affected).
    # This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.

    # Fading
    fading = false; # Fade windows during opacity changes.
    fade-delta = 4; # The time between steps in a fade in milliseconds. (default 10).
    fade-in-step = 0.03; # Opacity change between steps while fading in. (default 0.028).
    fade-out-step = 0.03; # Opacity change between steps while fading out. (default 0.03).
    #no-fading-openclose = true; # Fade windows in/out when opening/closing

    detect-client-opacity = true; # This prevents opacity being ignored for some apps. For example without this enabled my xfce4-notifyd is 100% opacity no matter what.

    # Window type settings
    wintypes:
    {
      tooltip = { fade = true; shadow = false; };
    };
  #+END_SRC


* Dunst

#+BEGIN_SRC conf :tangle "~/.config/dunst/dunstrc" :mkdirp yes
  [global]
      ### Display ###

      # Which monitor should the notifications be displayed on.
      monitor = 0

      # Display notification on focused monitor.  Possible modes are:
      #   mouse: follow mouse pointer
      #   keyboard: follow window with keyboard focus
      #   none: don't follow anything
      #
      # "keyboard" needs a window manager that exports the
      # _NET_ACTIVE_WINDOW property.
      # This should be the case for almost all modern window managers.
      #
      # If this option is set to mouse or keyboard, the monitor option
      # will be ignored.
      follow = mouse

      # The geometry of the window:
      #   [{width}]x{height}[+/-{x}+/-{y}]
      # The geometry of the message window.
      # The height is measured in number of notifications everything else
      # in pixels.  If the width is omitted but the height is given
      # ("-geometry x2"), the message window expands over the whole screen
      # (dmenu-like).  If width is 0, the window expands to the longest
      # message displayed.  A positive x is measured from the left, a
      # negative from the right side of the screen.  Y is measured from
      # the top and down respectively.
      # The width can be negative.  In this case the actual width is the
      # screen width minus the width defined in within the geometry option.
      geometry = "300x5-30+20"

      # Show how many messages are currently hidden (because of geometry).
      indicate_hidden = yes

      # Shrink window if it's smaller than the width.  Will be ignored if
      # width is 0.
      shrink = no

      # The transparency of the window.  Range: [0; 100].
      # This option will only work if a compositing window manager is
      # present (e.g. xcompmgr, compiz, etc.).
      transparency = 0

      # The height of the entire notification.  If the height is smaller
      # than the font height and padding combined, it will be raised
      # to the font height and padding.
      notification_height = 0

      # Draw a line of "separator_height" pixel height between two
      # notifications.
      # Set to 0 to disable.
      separator_height = 2

      # Padding between text and separator.
      padding = 8

      # Horizontal padding.
      horizontal_padding = 8

      # Defines width in pixels of frame around the notification window.
      # Set to 0 to disable.
      frame_width = 3

      # Defines color of the frame around the notification window.
      frame_color = "#5b6268"

      # Define a color for the separator.
      # possible values are:
      #  * auto: dunst tries to find a color fitting to the background;
      #  * foreground: use the same color as the foreground;
      #  * frame: use the same color as the frame;
      #  * anything else will be interpreted as a X color.
      separator_color = frame

      # Sort messages by urgency.
      sort = yes

      # Don't remove messages, if the user is idle (no mouse or keyboard input)
      # for longer than idle_threshold seconds.
      # Set to 0 to disable.
      idle_threshold = 120

      ### Text ###

      font = Roboto Light 14

      # The spacing between lines.  If the height is smaller than the
      # font height, it will get raised to the font height.
      line_height = 0

      # Possible values are:
      # full: Allow a small subset of html markup in notifications:
      #        <b>bold</b>
      #        <i>italic</i>
      #        <s>strikethrough</s>
      #        <u>underline</u>
      #
      #        For a complete reference see
      #        <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
      #
      # strip: This setting is provided for compatibility with some broken
      #        clients that send markup even though it's not enabled on the
      #        server. Dunst will try to strip the markup but the parsing is
      #        simplistic so using this option outside of matching rules for
      #        specific applications *IS GREATLY DISCOURAGED*.
      #
      # no:    Disable markup parsing, incoming notifications will be treated as
      #        plain text. Dunst will not advertise that it has the body-markup
      #        capability if this is set as a global setting.
      #
      # It's important to note that markup inside the format option will be parsed
      # regardless of what this is set to.
      markup = full

      # The format of the message.  Possible variables are:
      #   %a  appname
      #   %s  summary
      #   %b  body
      #   %i  iconname (including its path)
      #   %I  iconname (without its path)
      #   %p  progress value if set ([  0%] to [100%]) or nothing
      #   %n  progress value if set without any extra characters
      # Markup is allowed
      format = "<b>%s</b>\n%b"

      # Alignment of message text.
      # Possible values are "left", "center" and "right".
      alignment = left

      # Show age of message if message is older than show_age_threshold
      # seconds.
      # Set to -1 to disable.
      show_age_threshold = 60

      # Split notifications into multiple lines if they don't fit into
      # geometry.
      word_wrap = yes

      # Ignore newlines '\n' in notifications.
      ignore_newline = no

      # Merge multiple notifications with the same content
      stack_duplicates = true

      # Hide the count of merged notifications with the same content
      hide_duplicate_count = false

      # Display indicators for URLs (U) and actions (A).
      show_indicators = yes

      ### Icons ###

      # Align icons left/right/off
      icon_position = left

      # Scale larger icons down to this size, set to 0 to disable
      max_icon_size = 32

      # Paths to default icons.
      icon_folders = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

      ### History ###

      # Should a notification popped up from history be sticky or timeout
      # as if it would normally do.
      sticky_history = yes

      # Maximum amount of notifications kept in history
      history_length = 20

      ### Misc/Advanced ###

      # dmenu path.
      dmenu = /usr/bin/dmenu -p dunst:

      # Browser for opening urls in context menu.
      browser = /usr/bin/google-chrome

      # Always run rule-defined scripts, even if the notification is suppressed
      always_run_script = true

      # Define the title of the windows spawned by dunst
      title = Dunst

      # Define the class of the windows spawned by dunst
      class = Dunst

      # Print a notification on startup.
      # This is mainly for error detection, since dbus (re-)starts dunst
      # automatically after a crash.
      startup_notification = false

      ### Legacy

      # Use the Xinerama extension instead of RandR for multi-monitor support.
      # This setting is provided for compatibility with older nVidia drivers that
      # do not support RandR and using it on systems that support RandR is highly
      # discouraged.
      #
      # By enabling this setting dunst will not be able to detect when a monitor
      # is connected or disconnected which might break follow mode if the screen
      # layout changes.
      force_xinerama = false

  # Experimental features that may or may not work correctly. Do not expect them
  # to have a consistent behaviour across releases.
  [experimental]
      # Calculate the dpi to use on a per-monitor basis.
      # If this setting is enabled the Xft.dpi value will be ignored and instead
      # dunst will attempt to calculate an appropriate dpi value for each monitor
      # using the resolution and physical size. This might be useful in setups
      # where there are multiple screens with very different dpi values.
      per_monitor_dpi = false

  [shortcuts]

      # Shortcuts are specified as [modifier+][modifier+]...key
      # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
      # "mod3" and "mod4" (windows-key).
      # Xev might be helpful to find names for keys.

      # Close notification.
      close = ctrl+space

      # Close all notifications.
      close_all = ctrl+shift+space

      # Redisplay last message(s).
      # On the US keyboard layout "grave" is normally above TAB and left
      # of "1". Make sure this key actually exists on your keyboard layout,
      # e.g. check output of 'xmodmap -pke'
      history = ctrl+grave

      # Context menu.
      context = ctrl+shift+period

  [urgency_low]
      # IMPORTANT: colors have to be defined in quotation marks.
      # Otherwise the "#" and following would be interpreted as a comment.
      background = "#282c34"
      foreground = "#dfdfdf"
      timeout = 10
      # Icon for notifications with low urgency, uncomment to enable
      #icon = /path/to/icon

  [urgency_normal]
      background = "#282c34"
      foreground = "#dfdfdf"
      timeout = 10
      # Icon for notifications with normal urgency, uncomment to enable
      #icon = /path/to/icon

  [urgency_critical]
      background = "#282c34"
      foreground = "#dfdfdf"
      frame_color = "#ff6c6b"
      timeout = 0
      # Icon for notifications with critical urgency, uncomment to enable
      #icon = /path/to/icon

  # Every section that isn't one of the above is interpreted as a rules to
  # override settings for certain messages.
  # Messages can be matched by "appname", "summary", "body", "icon", "category",
  # "msg_urgency" and you can override the "timeout", "urgency", "foreground",
  # "background", "new_icon" and "format".
  # Shell-like globbing will get expanded.
  #
  # SCRIPTING
  # You can specify a script that gets run when the rule matches by
  # setting the "script" option.
  # The script will be called as follows:
  #   script appname summary body icon urgency
  # where urgency can be "LOW", "NORMAL" or "CRITICAL".
  #
  # NOTE: if you don't want a notification to be displayed, set the format
  # to "".
  # NOTE: It might be helpful to run dunst -print in a terminal in order
  # to find fitting options for rules.

  #[espeak]
  #    summary = "*"
  #    script = dunst_espeak.sh

  #[script-test]
  #    summary = "*script*"
  #    script = dunst_test.sh

  #[ignore]
  #    # This notification will not be displayed
  #    summary = "foobar"
  #    format = ""

  #[history-ignore]
  #    # This notification will not be saved in history
  #    summary = "foobar"
  #    history_ignore = yes

  #[signed_on]
  #    appname = Pidgin
  #    summary = "*signed on*"
  #    urgency = low
  #
  #[signed_off]
  #    appname = Pidgin
  #    summary = *signed off*
  #    urgency = low
  #
  #[says]
  #    appname = Pidgin
  #    summary = *says*
  #    urgency = critical
  #
  #[twitter]
  #    appname = Pidgin
  #    summary = *twitter.com*
  #    urgency = normal
  #
  # vim: ft=cfg

#+END_SRC

* XFCE4

** Clock Format

   #+BEGIN_SRC text
     <span size='large'>📅</span> <span font_family='Roboto Light'>%A %B %d %Y</span>  <span size='large'>🕒</span> <span font_family='Roboto Medium'>%R</span>
   #+END_SRC
